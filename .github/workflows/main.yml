name: CI

on: [push]

jobs:
  test:
    runs-on: ${{â€Šmatrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        # linux debug/release
        - os: ubuntu-latest
          config: Release
        - os: ubuntu-latest
          config: Debug

        # macos debug/release
        - os: macos-latest
          config: Release
        - os: macos-latest
          config: Debug

        # clang-tidy
        - os: macos-latest
          config: Debug
          args: -DENABLE_CODE_ANALYSIS=YES

        # clang-cl debug/release
        - os: windows-latest
          config: Debug
          args: -T ClangCL
        - os: windows-latest
          config: Release
          args: -T ClangCL

        # cl.exe debug/release
        - os: windows-latest
          config: Debug
        - os: windows-latest
          config: Release
    steps:
    - uses: actions/checkout@v2

    # Download the c-api directory
    - run: |
        curl -LO https://github.com/alexcrichton/abc/releases/download/a/tarballs.zip
        unzip tarballs.zip
        mkdir c-api
      shell: bash
    - run: |
        unzip wasmtime-dev-x86_64-windows-c-api.zip
        mv wasmtime-dev-x86_64-windows-c-api/* c-api
      if: matrix.os == 'windows-latest'
      shell: bash
    - run: tar xf wasmtime-dev-x86_64-macos-c-api.tar.xz -C c-api --strip-components=1
      if: matrix.os == 'macos-latest'
    - run: tar xf wasmtime-dev-x86_64-linux-c-api.tar.xz -C c-api --strip-components=1
      if: matrix.os == 'ubuntu-latest'

    # Configure CMake appropriately
    - run: cmake -B build ${{ matrix.args }}
      if: matrix.os == 'windows-latest'

    - run: cmake -B build -DCMAKE_CXX_COMPILER=clang -DCMAKE_BUILD_TYPE=${{ matrix.config }}
      if: matrix.os == 'ubuntu-latest'

    - run: echo /usr/local/opt/llvm/bin >> $GITHUB_PATH
      if: matrix.os == 'macos-latest'
    - run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.config }} ${{ matrix.args }}
      if: matrix.os == 'macos-latest'

    - run: cmake --build build --config ${{ matrix.config }} --verbose
    - run: ctest -C ${{ matrix.config }}
      working-directory: build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1

